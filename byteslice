#!/bin/bash

self="$(basename ${0})"

function usage {
    echo "Usage: ${self} <offset-start> <length>"
    echo ""
    echo 'Reads from stdin and prints the given byte range.'
}

function die {
    echo -e "\e[31merror: ${1}\e[0m"
    usage
    exit 1
}


[ -z "${1}" ] && die "no offset-start byte given"
offset_start="${1}"
[ "${offset_start}" -lt 0 ] && die "offset-start cannot be negative"

[ -z "${2}" ] && die "no length given"
len="${2}"
[ "${len}" -lt 0 ] && die "length cannot be negative"

# Note tail starts its count at byte 1 (not 0).
offset_start=$(( offset_start + 1 ))
# Make all output bytes be highlighted (except for control characters of course).
echo -en "\e[1;42m"
# Highlight newline characters that are included in the byte slice by (1) using
# tr to replace each newline with RS (record separator, octal: 037) and (2) sed
# to turn the RS into a middle dot followed by newline.
tail --bytes=+"${offset_start}" <&0 | head --bytes=+"${len}" | tr '\n' '\037'  | sed 's/\o37/Â·\n/g'
# Reset coloring.
# \x1b[K erases line from cursor to EOL (needed to not get background coloring
# of entire last line). "\x1b" is the ascii escape sequence, "[0K" is the
# command meaning: "erase the current line from cursor".
echo -e "\e[0m\x1b[0K"
