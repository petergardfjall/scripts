#!/bin/bash

scriptname=$(basename ${0})

function print_usage() {
    echo "usage ${scriptname} [OPTIONS] [FILENAME ...]"
    echo ""
    echo "Decrypts (user will be prompted for passwords) and prints all "
    echo "GPG-encrypted (.gpg) files under ~/.ssh/my-secrets/."
    echo "If no filename is given, all .gpg files are output."
    echo "If one or more FILENAMEs are given, only each such FILENAME.gpg will "
    echo "be output."
    echo ""
    echo "Options:"
    echo "--help      Show help text."
}

function die_with_error() {
    echo "error: ${1}"
    echo ""
    print_usage
    exit 1
}

for arg in ${@}; do
    case ${arg} in
	--help)
	    print_usage
	    exit 0
	    ;;
	--*)
	    die_with_error "unrecognized argument: ${arg}"
	    ;;
	*)
	    # assume only positional arguments left
	    break
	    ;;
    esac
    shift
done

if ! [ -d ~/.ssh/my-secrets ]; then
    die_with_error "no secrets directory found: ~/.ssh/my-secrets"
fi


# can be empty list => list all
filenames="$@"
if [ "${filenames}" = "" ]; then
    pushd ~/.ssh/my-secrets > /dev/null
    filenames=$(ls -1 *.gpg | sed -e 's/\..*$//' | xargs echo)
    popd
fi

for filename in ${filenames}; do
    echo "[${scriptname}] Decrypting ${filename}.gpg ..."
    content=$(gpg -d ~/.ssh/my-secrets/${filename}.gpg)
    echo ""
    echo "### ${filename}.gpg ###"
    echo ${content}
    echo ""
done
